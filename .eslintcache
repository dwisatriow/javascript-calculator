[{"/mnt/Data/Rio/Code/Web Development/FCC Projects/Front End Development Libraries Projects/javascript-calculator/src/index.js":"1","/mnt/Data/Rio/Code/Web Development/FCC Projects/Front End Development Libraries Projects/javascript-calculator/src/App.js":"2","/mnt/Data/Rio/Code/Web Development/FCC Projects/Front End Development Libraries Projects/javascript-calculator/src/reportWebVitals.js":"3","/mnt/Data/Rio/Code/Web Development/FCC Projects/Front End Development Libraries Projects/javascript-calculator/src/components/Numpad.js":"4","/mnt/Data/Rio/Code/Web Development/FCC Projects/Front End Development Libraries Projects/javascript-calculator/src/components/Display.js":"5","/mnt/Data/Rio/Code/Web Development/FCC Projects/Front End Development Libraries Projects/javascript-calculator/src/components/Pad.js":"6"},{"size":478,"mtime":1613116768710,"results":"7","hashOfConfig":"8"},{"size":6386,"mtime":1613142653868,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1611932998031,"results":"10","hashOfConfig":"8"},{"size":1154,"mtime":1613058660963,"results":"11","hashOfConfig":"8"},{"size":326,"mtime":1613064398121,"results":"12","hashOfConfig":"8"},{"size":501,"mtime":1613116768708,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1bj7e65",{"filePath":"17","messages":"18","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/Data/Rio/Code/Web Development/FCC Projects/Front End Development Libraries Projects/javascript-calculator/src/index.js",[],["28","29"],"/mnt/Data/Rio/Code/Web Development/FCC Projects/Front End Development Libraries Projects/javascript-calculator/src/App.js",["30","31","32","33","34","35","36","37","38","39"],"import { useState } from 'react';\nimport Numpad from './components/Numpad';\nimport Display from './components/Display';\nimport './App.scss';\n\nfunction App() {\n  // initialize input and output state\n  const [input, setInput] = useState(\"\");\n  const [output, setOutput] = useState([]);\n\n  // function handling pressed number\n  const handleNumber = (event) => {\n    const num = event.target.innerText;\n\n    setInput(prevInput => {\n      // limit digit\n      if (prevInput.length > 11) {\n        return prevInput;\n      }\n\n      // prevent input to begin with multiple 0's\n      if (num === \"0\" && /^0/.test(prevInput) && !(/[1-9]+0*$/.test(prevInput)))\n        return prevInput;\n\n      // prevent input adding number after a calculation\n      if (/=/.test(output.join('')))  \n        return prevInput;\n        \n      // prevent input to have multiple decimals and prevent adding decimal after a calculation\n      if (num === \".\" && (/\\./.test(prevInput) || /=/.test(output.join(''))))\n        return prevInput;\n\n      // handle point as first input\n      if (num === \".\" && !(prevInput))\n        return \"0.\";\n\n      // prevent number following 0 as first input\n      if (/[1-9]/.test(num) && /^0/.test(prevInput) && !(/^0\\./.test(prevInput)))\n        return prevInput;\n\n      // prevent number following operator on input\n      if (/[\\+×÷-]$/.test(prevInput))\n        return num;\n\n      // add the number to input\n      return prevInput + num;\n    });\n    \n    setOutput(prevOutput => {\n      // limit digit\n      if (prevOutput.length > 0\n          && prevOutput.join('').match(/\\d+\\.*\\d*$/g) !== null\n          && prevOutput.join('').match(/\\d+\\.*\\d*$/g).join('').length > 11) {\n        return prevOutput;\n      }\n\n      // prevent output to begin with multiple 0's\n      if (num === \"0\" && /^0/.test(prevOutput.join('')))\n        return prevOutput;\n      \n      // handle point as first output\n      if (num === \".\" && prevOutput.length === 0)\n        return prevOutput.concat([\"0.\"]);\n\n      // prevent output adding number after a calculation\n      if (/=/.test(output.join('')))\n        return prevOutput;\n      \n      // prevent output to add series of decimals\n      if (num === \".\" && /\\.$/.test(prevOutput.join('')))\n        return prevOutput;\n\n      // prevent adding multiple decimal to a number and after a calculation\n      if (num === \".\"\n          && /[\\+×÷-]*\\d+\\.\\d+$/.test(prevOutput.join(''))\n          || /=/.test(prevOutput.join('')))\n        return prevOutput;\n\n      // add the number to output\n      return prevOutput.concat([num]);\n    });\n  }\n\n  // function handling pressed operator\n  const handleOperator = (event) => {\n    const op = event.target.innerText;\n\n    setInput(prevInput => {\n      // prevent operator as first input\n      if (!prevInput) return prevInput;\n\n      //prevent operator following decimal\n      if (/\\.$/.test(output.join('')))\n        return prevInput;\n\n      // prevent adding sequential same operator to the input\n      if (op === prevInput)\n        return prevInput;\n\n      // start new calculation if previous calculation present\n      if (/=/.test(output.join(''))) {\n        setOutput([input].concat([op]));\n        return op;\n      }\n\n      return op;  // add the operator to input\n    });\n    \n    setOutput(prevOutput => {\n      // prevent operator as first output\n      if (prevOutput.length === 0) return prevOutput;\n\n      //prevent operator following decimal\n      if (/\\.$/.test(output.join('')))\n        return prevOutput;\n\n      // handle negative number following operator\n      if (op === \"-\"\n          && /[\\+×÷-]$/.test(prevOutput.join(''))\n          && !(/[\\+×÷-]{2}$/.test(prevOutput.join(''))))\n        return prevOutput.concat([op]);\n\n      // handle three series of operator with subtract in the middle\n      if (/[\\+×÷-]{1}-{1}$/.test(prevOutput.join('')))\n        return prevOutput.slice(0, prevOutput.length - 2).concat([op]);\n        \n      // prevent adding sequential same operator to the output\n      if (prevOutput[prevOutput.length - 1] === op)\n        return prevOutput;\n\n      // handle changing operator on the output\n      if (/[\\+×÷-]$/.test(prevOutput.join('')))\n        return prevOutput.slice(0, prevOutput.length - 1).concat([op]);\n\n      return prevOutput.concat([op]);\n    });\n  }\n\n  // converting string to real calculation\n  const calculate = (calculationStr) => {\n    let calculation = \"\".concat(calculationStr);\n\n    // replace multiply and divide symbol\n    calculation = calculation.replace(/×/g, \"*\");\n    calculation = calculation.replace(/÷/g, \"/\");\n\n    // handle sequence of minus\n    if (/--/.test(calculation))\n      calculation = calculation.replace(/(--)/, \"+\");\n\n    return new Function('return ' + calculation)();\n  }\n\n  // function handling pressed equals\n  const handleResult = () => {\n    let result;\n\n    // prevent equals as first input\n    if (!input) return;\n\n    //prevent equals following decimal\n    if (/\\.$/.test(output.join('')))\n      return;\n\n    // prevent multiple equals in calculation\n    if (/=/.test(output.join('')))\n      return;\n\n    // calculating the result\n    if (/[\\+×÷-]$/.test(output.join(''))) {  // prevent operator as the last output before calculating\n      setOutput(prevOutput => {\n        const newOutput = prevOutput.slice(0, prevOutput.length - 1);\n        result = calculate(newOutput.join(''));\n        return newOutput\n      })\n    } else {\n      result = calculate(output.join(''));\n    }\n\n    setInput(result);\n    setOutput(prevOutput => {\n      return prevOutput.concat(['=', result]);\n    });\n  }\n\n  // function handling pressed CE\n  const handleDelete = () => {\n    // prevent clearing entry after calculation completed\n    if (/=/.test(output.join('')))\n      return;\n\n    setOutput(prevOutput => {\n      setInput(prevOutput[prevOutput.length - 2] || \"\");\n      return prevOutput.slice(0, prevOutput.length - 1);\n    });\n  }\n  \n  // function handling pressed AC\n  const handleClearAll = () => {\n    setInput(\"\");\n    setOutput([]);\n  }\n  \n  return (\n    <div id=\"app\">\n      <h1 id=\"app-name\">CALCULATOR</h1>\n      <Display input={input} output={output} />\n      <Numpad\n        handleNumber={handleNumber}\n        handleOperator={handleOperator}\n        handleResult={handleResult}\n        handleDelete={handleDelete}\n        handleClearAll={handleClearAll}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","/mnt/Data/Rio/Code/Web Development/FCC Projects/Front End Development Libraries Projects/javascript-calculator/src/reportWebVitals.js",[],"/mnt/Data/Rio/Code/Web Development/FCC Projects/Front End Development Libraries Projects/javascript-calculator/src/components/Numpad.js",[],"/mnt/Data/Rio/Code/Web Development/FCC Projects/Front End Development Libraries Projects/javascript-calculator/src/components/Display.js",[],"/mnt/Data/Rio/Code/Web Development/FCC Projects/Front End Development Libraries Projects/javascript-calculator/src/components/Pad.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":42,"column":13,"nodeType":"46","messageId":"47","endLine":42,"endColumn":14,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":75,"column":11,"nodeType":"51","messageId":"52","endLine":75,"endColumn":13},{"ruleId":"44","severity":1,"message":"45","line":75,"column":16,"nodeType":"46","messageId":"47","endLine":75,"endColumn":17,"suggestions":"53"},{"ruleId":"49","severity":1,"message":"50","line":76,"column":11,"nodeType":"51","messageId":"52","endLine":76,"endColumn":13},{"ruleId":"44","severity":1,"message":"45","line":119,"column":16,"nodeType":"46","messageId":"47","endLine":119,"endColumn":17,"suggestions":"54"},{"ruleId":"44","severity":1,"message":"45","line":120,"column":18,"nodeType":"46","messageId":"47","endLine":120,"endColumn":19,"suggestions":"55"},{"ruleId":"44","severity":1,"message":"45","line":124,"column":13,"nodeType":"46","messageId":"47","endLine":124,"endColumn":14,"suggestions":"56"},{"ruleId":"44","severity":1,"message":"45","line":132,"column":13,"nodeType":"46","messageId":"47","endLine":132,"endColumn":14,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":151,"column":12,"nodeType":"60","messageId":"61","endLine":151,"endColumn":49},{"ruleId":"44","severity":1,"message":"45","line":170,"column":11,"nodeType":"46","messageId":"47","endLine":170,"endColumn":12,"suggestions":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["65","66"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator",["67","68"],["69","70"],["71","72"],["73","74"],["75","76"],"no-new-func","The Function constructor is eval.","NewExpression","noFunctionConstructor",["77","78"],"no-global-assign","no-unsafe-negation",{"messageId":"79","fix":"80","desc":"81"},{"messageId":"82","fix":"83","desc":"84"},{"messageId":"79","fix":"85","desc":"81"},{"messageId":"82","fix":"86","desc":"84"},{"messageId":"79","fix":"87","desc":"81"},{"messageId":"82","fix":"88","desc":"84"},{"messageId":"79","fix":"89","desc":"81"},{"messageId":"82","fix":"90","desc":"84"},{"messageId":"79","fix":"91","desc":"81"},{"messageId":"82","fix":"92","desc":"84"},{"messageId":"79","fix":"93","desc":"81"},{"messageId":"82","fix":"94","desc":"84"},{"messageId":"79","fix":"95","desc":"81"},{"messageId":"82","fix":"96","desc":"84"},"removeEscape",{"range":"97","text":"98"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"99","text":"100"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"101","text":"98"},{"range":"102","text":"100"},{"range":"103","text":"98"},{"range":"104","text":"100"},{"range":"105","text":"98"},{"range":"106","text":"100"},{"range":"107","text":"98"},{"range":"108","text":"100"},{"range":"109","text":"98"},{"range":"110","text":"100"},{"range":"111","text":"98"},{"range":"112","text":"100"},[1331,1332],"",[1331,1331],"\\",[2366,2367],[2366,2366],[3577,3578],[3577,3577],[3629,3630],[3629,3629],[3791,3792],[3791,3791],[4118,4119],[4118,4118],[5107,5108],[5107,5107]]